<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CoUi+Ph/0eCb3xcicMQAAAAASUVORK5CYII=
</value>
  </data>
</root>